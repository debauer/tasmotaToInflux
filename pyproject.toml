[tool.poetry]
name = "TasmotaToInflux"
version = "0.0.1"
description = ""
authors = [
    "David Bauer <github@debauer.net>",
]
license = "MIT"
readme = "README.md"

packages = [
    { include = "tasmotatoinflux", from = "src" }
]

[tool.poetry.scripts]
tams = "tasmotatoinflux.core:core"

[tool.poetry.dependencies]
python = "^3.10"
influxdb = "^5.3.1"
overrides = "^7.3.1"

[tool.poetry.dev-dependencies]
types-requests = "^2.27.30"
black = "^22.3.0"
mypy = "^0.961"
pylint = "^2.14.2"
pyupgrade = "^2.34.0"
isort = "^5.10.1"
pytest = "^7.1.2"

[build-system]
requires = ["poetry_core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.pylint.master]
extension-pkg-whitelist = ["numpy", "cv2"]
jobs = 0

[tool.pylint.basic]
good-names = [
    "i", # iterator
    "_", "__", "___", # unneeded variable
    "T", # generic type
    "id",
]

[tool.pylint.typecheck]
# pure c module
generated-members = ["prctl.set_name"]
# necessary, at least for systems without cuda
# otherwise extension-pkg-whitelist should do the trick
ignored-modules = [
    "cv2.fisheye"
]

[tool.pylint.message_control]
disable = [
    "missing-module-docstring", "missing-class-docstring", "missing-function-docstring",
    "no-member", # sadly dataclass_json annotations don't work with pylint
    "line-too-long",
    "too-few-public-methods",
    "duplicate-code",
    "too-many-ancestors",
]
enable = [
    "useless-suppression"
]

[tool.pylint.design]
max-attributes = 10

[tool.mypy]
python_version = "3.10"
files = "src"

junit_xml = "xunit-reports/xunit-result-mypy.xml"

# output style configuration
show_column_numbers = true
show_error_codes = true
pretty = true

# additional warnings
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true

no_implicit_optional = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
# disallow_any_explicit = true
disallow_any_generics = true
disallow_untyped_calls = true

enable_error_code = [
    "ignore-without-code",
]

# ignores that library has no typing information with it
[[tool.mypy.overrides]]
module = [
    "prctl",
    "paho.*",
    "snap7.*",
    "strenum",
    "dataclasses_json",
    "flask_cors"
]
ignore_missing_imports = true
